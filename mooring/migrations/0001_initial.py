# -*- coding: utf-8 -*-
# Generated by Django 1.10.8 on 2018-02-07 02:00
from __future__ import unicode_literals

import datetime
from django.conf import settings
import django.contrib.gis.db.models.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import mooring.models
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0002_auto_20150616_2121'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        # ('invoice', '0008_invoice_previous_invoice'),
    ]

    operations = [
        migrations.CreateModel(
            name='MooringAreaPriceHistory',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('date_start', models.DateField()),
                ('date_end', models.DateField()),
                ('rate_id', models.IntegerField()),
                ('adult', models.DecimalField(decimal_places=2, max_digits=8)),
                ('concession', models.DecimalField(decimal_places=2, max_digits=8)),
                ('child', models.DecimalField(decimal_places=2, max_digits=8)),
                ('details', models.TextField()),
                ('reason_id', models.IntegerField()),
                ('infant', models.DecimalField(decimal_places=2, max_digits=8)),
            ],
            options={
                'ordering': ['-date_start'],
                'db_table': 'mooring_campground_pricehistory_v',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MooringsiteClassPriceHistory',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('date_start', models.DateField()),
                ('date_end', models.DateField()),
                ('rate_id', models.IntegerField()),
                ('adult', models.DecimalField(decimal_places=2, max_digits=8)),
                ('concession', models.DecimalField(decimal_places=2, max_digits=8)),
                ('child', models.DecimalField(decimal_places=2, max_digits=8)),
                ('details', models.TextField()),
                ('reason_id', models.IntegerField()),
                ('infant', models.DecimalField(decimal_places=2, max_digits=8)),
            ],
            options={
                'ordering': ['-date_start'],
                'db_table': 'mooring_campsiteclass_pricehistory_v',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legacy_id', models.IntegerField(blank=True, null=True, unique=True)),
                ('legacy_name', models.CharField(blank=True, max_length=255, null=True)),
                ('arrival', models.DateField()),
                ('departure', models.DateField()),
                ('details', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('booking_type', models.SmallIntegerField(choices=[(0, 'Reception booking'), (1, 'Internet booking'), (2, 'Black booking'), (3, 'Temporary reservation')], default=0)),
                ('expiry_time', models.DateTimeField(blank=True, null=True)),
                ('cost_total', models.DecimalField(decimal_places=2, default='0.00', max_digits=8)),
                ('is_canceled', models.BooleanField(default=False)),
                ('cancellation_reason', models.TextField(blank=True, null=True)),
                ('cancelation_time', models.DateTimeField(blank=True, null=True)),
                ('confirmation_sent', models.BooleanField(default=False)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('canceled_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='canceled_bookings', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BookingHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('arrival', models.DateField()),
                ('departure', models.DateField()),
                ('details', django.contrib.postgres.fields.jsonb.JSONField()),
                ('cost_total', models.DecimalField(decimal_places=2, default='0.00', max_digits=8)),
                ('confirmation_sent', models.BooleanField()),
                ('campground', models.CharField(max_length=100)),
                ('campsites', django.contrib.postgres.fields.jsonb.JSONField()),
                ('vehicles', django.contrib.postgres.fields.jsonb.JSONField()),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='history', to='mooring.Booking')),
                # ('invoice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='invoice.Invoice')),
                ('invoice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ledger_api_client.Invoice')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BookingInvoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_reference', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='mooring.Booking')),
            ],
        ),
        migrations.CreateModel(
            name='BookingVehicleRego',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rego', models.CharField(max_length=50)),
                ('type', models.CharField(choices=[('vehicle', 'Vehicle'), ('motorbike', 'Motorcycle'), ('concession', 'Vehicle (concession)')], max_length=10)),
                ('entry_fee', models.BooleanField(default=False)),
                ('park_entry_fee', models.BooleanField(default=False)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='regos', to='mooring.Booking')),
            ],
        ),
        migrations.CreateModel(
            name='ClosureReason',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('editable', models.BooleanField(default=True, editable=False)),
            ],
            options={
                'ordering': ('id',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('phone_number', models.CharField(blank=True, max_length=50, null=True)),
                ('email', models.EmailField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('opening_hours', models.TextField(null=True)),
                ('other_services', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('abbreviation', models.CharField(max_length=16, null=True, unique=True)),
                ('ratis_id', models.IntegerField(default=-1)),
            ],
        ),
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField(null=True)),
                ('image', models.ImageField(null=True, upload_to=b'')),
                ('type', models.SmallIntegerField(choices=[(0, 'Campground'), (1, 'Mooringsite'), (2, 'Not Linked')], default=2, help_text='Set the model where the feature is located.')),
            ],
        ),
        migrations.CreateModel(
            name='Marina',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('ratis_id', models.IntegerField(default=-1)),
                ('entry_fee_required', models.BooleanField(default=True)),
                ('oracle_code', models.CharField(blank=True, max_length=50, null=True)),
                ('wkb_geometry', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('district', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='mooring.District')),
            ],
        ),
        migrations.CreateModel(
            name='MarinaEntryRate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vehicle', models.DecimalField(decimal_places=2, default='0.00', max_digits=8)),
                ('concession', models.DecimalField(decimal_places=2, default='0.00', max_digits=8)),
                ('motorbike', models.DecimalField(decimal_places=2, default='0.00', max_digits=8)),
                ('period_start', models.DateField()),
                ('period_end', models.DateField(blank=True, null=True)),
                ('details', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MaximumStayReason',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('editable', models.BooleanField(default=True, editable=False)),
            ],
            options={
                'ordering': ('id',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MooringArea',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, null=True)),
                ('ratis_id', models.IntegerField(default=-1)),
                ('campground_type', models.SmallIntegerField(choices=[(0, 'Bookable Online'), (1, 'Not Bookable Online'), (2, 'Other Accomodation'), (3, 'Unpublished')], default=3)),
                ('site_type', models.SmallIntegerField(choices=[(0, 'Bookable Per Site'), (1, 'Bookable Per Site Type'), (2, 'Bookable Per Site Type (hide site number)')], default=0)),
                ('address', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('additional_info', models.TextField(blank=True, null=True)),
                ('area_activities', models.TextField(blank=True, null=True)),
                ('driving_directions', models.TextField(blank=True, null=True)),
                ('fees', models.TextField(blank=True, null=True)),
                ('othertransport', models.TextField(blank=True, null=True)),
                ('key', models.CharField(blank=True, max_length=255, null=True)),
                ('price_level', models.SmallIntegerField(choices=[(0, 'Campground level'), (1, 'Mooringsite Class level'), (2, 'Mooringsite level')], default=0)),
                ('info_url', models.CharField(blank=True, max_length=255)),
                ('long_description', models.TextField(blank=True, null=True)),
                ('wkb_geometry', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('check_in', models.TimeField(default=datetime.time(14, 0))),
                ('check_out', models.TimeField(default=datetime.time(10, 0))),
                ('max_advance_booking', models.IntegerField(default=180)),
                ('oracle_code', models.CharField(blank=True, max_length=50, null=True)),
                ('campground_map', models.FileField(blank=True, null=True, upload_to=mooring.models.update_mooring_map_filename)),
                ('contact', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='mooring.Contact')),
                ('features', models.ManyToManyField(to='mooring.Feature')),
                ('park', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='marina', to='mooring.Marina')),
            ],
        ),
        migrations.CreateModel(
            name='MooringAreaBookingRange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, help_text='Used to check if the start and end dated were changed')),
                ('status', models.SmallIntegerField(choices=[(0, 'Open'), (1, 'Closed')], default=0)),
                ('details', models.TextField(blank=True, null=True)),
                ('range_start', models.DateField(blank=True, null=True)),
                ('range_end', models.DateField(blank=True, null=True)),
                ('min_sites', models.SmallIntegerField(default=1)),
                ('max_sites', models.SmallIntegerField(default=12)),
                ('campground', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='booking_ranges', to='mooring.MooringArea')),
                ('closure_reason', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mooring.ClosureReason')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MooringAreaGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('campgrounds', models.ManyToManyField(blank=True, to='mooring.MooringArea')),
                ('members', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MooringAreaImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(max_length=255, upload_to=mooring.models.campground_image_path)),
                ('checksum', models.CharField(blank=True, editable=False, max_length=255)),
                ('campground', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='mooring.MooringArea')),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='MooringAreaStayHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('min_days', models.SmallIntegerField(default=1)),
                ('max_days', models.SmallIntegerField(default=28)),
                ('min_dba', models.SmallIntegerField(default=0)),
                ('max_dba', models.SmallIntegerField(default=180)),
                ('details', models.TextField(blank=True, null=True)),
                ('range_start', models.DateField(blank=True, null=True)),
                ('range_end', models.DateField(blank=True, null=True)),
                ('campground', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='stay_history', to='mooring.MooringArea')),
                ('reason', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mooring.MaximumStayReason')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Mooringsite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('wkb_geometry', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('tent', models.BooleanField(default=True)),
                ('campervan', models.BooleanField(default=False)),
                ('caravan', models.BooleanField(default=False)),
                ('min_people', models.SmallIntegerField(default=1)),
                ('max_people', models.SmallIntegerField(default=12)),
                ('description', models.TextField(null=True)),
                ('features', models.ManyToManyField(to='mooring.Feature')),
                ('mooringarea', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='campsites', to='mooring.MooringArea')),
            ],
        ),
        migrations.CreateModel(
            name='MooringsiteBooking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(db_index=True)),
                ('booking_type', models.SmallIntegerField(choices=[(0, 'Reception booking'), (1, 'Internet booking'), (2, 'Black booking'), (3, 'Temporary reservation')], default=0)),
                ('booking', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='campsites', to='mooring.Booking')),
                ('campsite', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='mooring.Mooringsite')),
            ],
        ),
        migrations.CreateModel(
            name='MooringsiteBookingRange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, help_text='Used to check if the start and end dated were changed')),
                ('status', models.SmallIntegerField(choices=[(0, 'Open'), (1, 'Closed')], default=0)),
                ('details', models.TextField(blank=True, null=True)),
                ('range_start', models.DateField(blank=True, null=True)),
                ('range_end', models.DateField(blank=True, null=True)),
                ('campsite', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='booking_ranges', to='mooring.Mooringsite')),
                ('closure_reason', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mooring.ClosureReason')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MooringsiteClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('tent', models.BooleanField(default=True)),
                ('campervan', models.BooleanField(default=False)),
                ('caravan', models.BooleanField(default=False)),
                ('min_people', models.SmallIntegerField(default=1)),
                ('max_people', models.SmallIntegerField(default=12)),
                ('deleted', models.BooleanField(default=False)),
                ('description', models.TextField(null=True)),
                ('max_vehicles', models.PositiveIntegerField(default=1)),
                ('camp_unit_suitability', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
                ('features', models.ManyToManyField(to='mooring.Feature')),
            ],
        ),
        migrations.CreateModel(
            name='MooringsiteRate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allow_public_holidays', models.BooleanField(default=True)),
                ('date_start', models.DateField(default=datetime.date.today)),
                ('date_end', models.DateField(blank=True, null=True)),
                ('rate_type', models.SmallIntegerField(choices=[(0, 'Standard'), (1, 'Discounted')], default=0)),
                ('price_model', models.SmallIntegerField(choices=[(0, 'Price per Person'), (1, 'Fixed Price')], default=0)),
                ('details', models.TextField(blank=True, null=True)),
                ('update_level', models.SmallIntegerField(choices=[(0, 'Campground level'), (1, 'Mooringsite Class level'), (2, 'Mooringsite level')], default=0)),
                ('campsite', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='rates', to='mooring.Mooringsite')),
            ],
        ),
        migrations.CreateModel(
            name='MooringsiteStayHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('min_days', models.SmallIntegerField(default=1)),
                ('max_days', models.SmallIntegerField(default=28)),
                ('min_dba', models.SmallIntegerField(default=0)),
                ('max_dba', models.SmallIntegerField(default=180)),
                ('details', models.TextField(blank=True, null=True)),
                ('range_start', models.DateField(blank=True, null=True)),
                ('range_end', models.DateField(blank=True, null=True)),
                ('campsite', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='stay_history', to='mooring.Mooringsite')),
                ('reason', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mooring.MaximumStayReason')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OpenReason',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('editable', models.BooleanField(default=True, editable=False)),
            ],
            options={
                'ordering': ('id',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OutstandingBookingRecipient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='PriceReason',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('editable', models.BooleanField(default=True, editable=False)),
            ],
            options={
                'ordering': ('id',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PromoArea',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('wkb_geometry', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='Rate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adult', models.DecimalField(decimal_places=2, default='10.00', max_digits=8)),
                ('concession', models.DecimalField(decimal_places=2, default='6.60', max_digits=8)),
                ('child', models.DecimalField(decimal_places=2, default='2.20', max_digits=8)),
                ('infant', models.DecimalField(decimal_places=2, default='0', max_digits=8)),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('abbreviation', models.CharField(max_length=16, null=True, unique=True)),
                ('ratis_id', models.IntegerField(default=-1)),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='rate',
            unique_together=set([('adult', 'concession', 'child', 'infant')]),
        ),
        migrations.AddField(
            model_name='mooringsiterate',
            name='rate',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='mooring.Rate'),
        ),
        migrations.AddField(
            model_name='mooringsiterate',
            name='reason',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mooring.PriceReason'),
        ),
        migrations.AddField(
            model_name='mooringsitebookingrange',
            name='open_reason',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mooring.OpenReason'),
        ),
        migrations.AddField(
            model_name='mooringsite',
            name='mooringsite_class',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='campsites', to='mooring.MooringsiteClass'),
        ),
        migrations.AddField(
            model_name='mooringareabookingrange',
            name='open_reason',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mooring.OpenReason'),
        ),
        migrations.AddField(
            model_name='mooringarea',
            name='promo_area',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='mooring.PromoArea'),
        ),
        migrations.AddField(
            model_name='mooringarea',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='marinaentryrate',
            name='reason',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='mooring.PriceReason'),
        ),
        migrations.AddField(
            model_name='district',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='mooring.Region'),
        ),
        migrations.AddField(
            model_name='booking',
            name='mooringarea',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='mooring.MooringArea'),
        ),
        migrations.AlterUniqueTogether(
            name='mooringsiterate',
            unique_together=set([('campsite', 'rate', 'date_start', 'date_end')]),
        ),
        migrations.AlterUniqueTogether(
            name='mooringsitebooking',
            unique_together=set([('campsite', 'date')]),
        ),
        migrations.AlterUniqueTogether(
            name='mooringsite',
            unique_together=set([('mooringarea', 'name')]),
        ),
        migrations.AlterUniqueTogether(
            name='mooringarea',
            unique_together=set([('name', 'park')]),
        ),
        migrations.AlterUniqueTogether(
            name='marina',
            unique_together=set([('name',)]),
        ),
        migrations.AlterUniqueTogether(
            name='bookingvehiclerego',
            unique_together=set([('booking', 'rego')]),
        ),
    ]
